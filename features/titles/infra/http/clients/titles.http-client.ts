/**
 * @NOTICE: This file has been auto generated by SWDBApp OpenAPI generator.
 *
 * Do not edit the file manually!
 */

/* api.mustache */

import { BaseHttpClient } from '@swdbapp/types';
import { XHR_FETCH_METHODS } from '@amjs/js-utils';
import { provideAPIHeaders } from '@swdbapp/core-feature';
import type { TitleDetailResponse } from '../models';
import type { TitlesListResponse } from '../models';

export interface TitlesTitleDetailsInput {
	/** Unique era identifier */
	id: string;
}

export interface TitlesTitlesListInput {
	/** Max. number of elements to return */
	limit?: number;
	/** Index or pointer where to start filtering */
	offset?: number;
	/** Field to order */
	orderBy?: string;
	/** Direction of the ordering. Could be:  - \asc\ for ascending order - \desc\ for descending order  */
	orderDir?: string;
	/** Value to use as search criteria */
	search?: string;
	/** Field from era model to use as search criteria */
	searchBy?: string;
}

export interface TitlesHttpClient {
	/**
	 * Returns details of a title
	 *
	 * @param input Request parameters
	 */
	details(input: TitlesTitleDetailsInput): Promise<TitleDetailResponse | Error>;

	/**
	 * List all available titles
	 *
	 * @param input Request parameters
	 */
	list(input?: TitlesTitlesListInput): Promise<TitlesListResponse | Error>;
}

export class DefaultTitlesHttpClient extends BaseHttpClient implements TitlesHttpClient {
	/**
	 * @override
	 */
	protected _serialize(
		headers?: Record<string, string>,
		body?: object | number | string | boolean | null
	): Promise<void | Error> {
		return super._serialize(
			{
				...(headers || {}),
				...provideAPIHeaders(),
			},
			body
		);
	}

	async details({ id }: TitlesTitleDetailsInput): Promise<TitleDetailResponse | Error> {
		return this.fetch<TitleDetailResponse>(`/titles/${id}`, {
			method: XHR_FETCH_METHODS.GET,
		});
	}

	async list({ limit, offset, orderBy, orderDir, search, searchBy }: TitlesTitlesListInput = {}): Promise<
		TitlesListResponse | Error
	> {
		return this.fetch<TitlesListResponse>(`/titles`, {
			method: XHR_FETCH_METHODS.GET,
			params: { limit, offset, orderBy, orderDir, search, searchBy },
		});
	}
}
